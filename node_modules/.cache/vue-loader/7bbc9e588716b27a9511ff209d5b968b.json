{"remainingRequest":"/Users/haideraltemimy/Documents/GitHub/bala_front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/haideraltemimy/Documents/GitHub/bala_front/src/components/Owner/components/item_dialog.vue?vue&type=template&id=a829cbf2&","dependencies":[{"path":"/Users/haideraltemimy/Documents/GitHub/bala_front/src/components/Owner/components/item_dialog.vue","mtime":1595934382370},{"path":"/Users/haideraltemimy/Documents/GitHub/bala_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/haideraltemimy/Documents/GitHub/bala_front/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/haideraltemimy/Documents/GitHub/bala_front/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/haideraltemimy/Documents/GitHub/bala_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/haideraltemimy/Documents/GitHub/bala_front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}