{"remainingRequest":"/Users/haideraltemimy/Documents/GitHub/ahjezly_front_old/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/haideraltemimy/Documents/GitHub/ahjezly_front_old/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Users/haideraltemimy/Documents/GitHub/ahjezly_front_old/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/haideraltemimy/Documents/GitHub/ahjezly_front_old/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/haideraltemimy/Documents/GitHub/ahjezly_front_old/src/components/DeliverCompanies/components/drivers.vue?vue&type=template&id=4d844f6a&","dependencies":[{"path":"/Users/haideraltemimy/Documents/GitHub/ahjezly_front_old/src/components/DeliverCompanies/components/drivers.vue","mtime":1586786648477},{"path":"/Users/haideraltemimy/Documents/GitHub/ahjezly_front_old/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/haideraltemimy/Documents/GitHub/ahjezly_front_old/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/haideraltemimy/Documents/GitHub/ahjezly_front_old/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/haideraltemimy/Documents/GitHub/ahjezly_front_old/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/haideraltemimy/Documents/GitHub/ahjezly_front_old/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}