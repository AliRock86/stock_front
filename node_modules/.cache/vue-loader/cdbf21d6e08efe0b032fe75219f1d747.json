{"remainingRequest":"/Users/haideraltemimy/Documents/GitHub/ahjezly_front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/haideraltemimy/Documents/GitHub/ahjezly_front/src/components/admin/components/admin_dashbourd.vue?vue&type=template&id=70b0f30f&","dependencies":[{"path":"/Users/haideraltemimy/Documents/GitHub/ahjezly_front/src/components/admin/components/admin_dashbourd.vue","mtime":1588245039991},{"path":"/Users/haideraltemimy/Documents/GitHub/ahjezly_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/haideraltemimy/Documents/GitHub/ahjezly_front/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/haideraltemimy/Documents/GitHub/ahjezly_front/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/haideraltemimy/Documents/GitHub/ahjezly_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/haideraltemimy/Documents/GitHub/ahjezly_front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}