{"remainingRequest":"/Users/haideraltemimy/Documents/GitHub/Hejozat/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/haideraltemimy/Documents/GitHub/Hejozat/src/components/mapitemlocation.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/haideraltemimy/Documents/GitHub/Hejozat/src/components/mapitemlocation.vue","mtime":1578862809542},{"path":"/Users/haideraltemimy/Documents/GitHub/Hejozat/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/Users/haideraltemimy/Documents/GitHub/Hejozat/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/haideraltemimy/Documents/GitHub/Hejozat/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n\nexport default {\n   props: {\n      'latt': String,\n      'long': String\n    },\n  name: \"GoogleMap\",\n  data() {\n    return {\n      // default to Montreal to keep it simple\n      // change this to whatever makes sense\n      center: { lat: 45.508, lng: -73.587 },\n      markers: [],\n      places: [],\n      lat:0,\n      lng:0,\n      currentPlace: null\n    };\n  },\n\n  mounted() {\n    this.geolocate()\n\n       \n     \n        const marker = {\n          lat: parseFloat(this.latt),\n       lng: parseFloat(this.long)\n       };\n            this.markers.push({ position: marker });\n        this.places.push(position);\n        this.center = marker;\n        this.currentPlace = null;\n        this.lat=position.coords.latitude;\n        this.lng=position.coords.longitude;\n   \nthis.center = {\n          lat: this.latt,\n          lng:this.long\n        };\n   \n  },\n\n  methods: {\n    // receives a place object via the autocomplete component\n   \n   \n     \n      \n\n    geolocate: function() {\n      navigator.geolocation.getCurrentPosition(position => {\n\n        this.center = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n      \n      });\n   \n     \n       //this.$emit(\"getmyLocation\",this.center.lat,this.center.lng);\n    },\n    \n  }\n};\n",{"version":3,"sources":["mapitemlocation.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;AAMA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;;AAEA;AACA","file":"mapitemlocation.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-container fluid=\"\"  style=\"background:white\">\n    \n  \n  \n    \n   \n    <gmap-map id=\"googleMap\"\n      :center=\"center\"\n      :zoom=\"12\"\n      style=\"width:100%;  height: 400px;\"\n      @click.native=\"setPlace\"\n      :clickable=\"true\"\n        :draggable=\"true\"\n       \n    >\n       <gmap-marker\n        :key=\"index\"\n        v-for=\"(m, index) in markers\"\n        :position=\"m.position\"\n        @click=\"center=m.position\"\n      ></gmap-marker>\n    </gmap-map>\n  \n \n  </v-container>\n</template>\n\n<script>\n\n\n\n\n\nexport default {\n   props: {\n      'latt': String,\n      'long': String\n    },\n  name: \"GoogleMap\",\n  data() {\n    return {\n      // default to Montreal to keep it simple\n      // change this to whatever makes sense\n      center: { lat: 45.508, lng: -73.587 },\n      markers: [],\n      places: [],\n      lat:0,\n      lng:0,\n      currentPlace: null\n    };\n  },\n\n  mounted() {\n    this.geolocate()\n\n       \n     \n        const marker = {\n          lat: parseFloat(this.latt),\n       lng: parseFloat(this.long)\n       };\n            this.markers.push({ position: marker });\n        this.places.push(position);\n        this.center = marker;\n        this.currentPlace = null;\n        this.lat=position.coords.latitude;\n        this.lng=position.coords.longitude;\n   \nthis.center = {\n          lat: this.latt,\n          lng:this.long\n        };\n   \n  },\n\n  methods: {\n    // receives a place object via the autocomplete component\n   \n   \n     \n      \n\n    geolocate: function() {\n      navigator.geolocation.getCurrentPosition(position => {\n\n        this.center = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n      \n      });\n   \n     \n       //this.$emit(\"getmyLocation\",this.center.lat,this.center.lng);\n    },\n    \n  }\n};\n</script>"]}]}